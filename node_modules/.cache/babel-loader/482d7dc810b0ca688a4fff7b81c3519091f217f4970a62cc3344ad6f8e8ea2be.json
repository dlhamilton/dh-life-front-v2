{"ast":null,"code":"var _jsxFileName = \"/workspace/dh-life-front-v2/src/pages/AverageRating.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { api } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AverageRating = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [average, setAverage] = useState(null);\n  const [dates, setDates] = useState({\n    start_date: \"\",\n    end_date: \"\"\n  });\n  const fetchAverageRating = async () => {\n    if (!dates.start_date || !dates.end_date) return;\n    try {\n      const res = await api.get(`api/focus-areas/${id}/average-rating/`, {\n        params: dates\n      });\n      setAverage(res.data.average_rating);\n    } catch (error) {\n      console.error(\"Error fetching average rating\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Average Rating for Focus Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        onChange: e => setDates({\n          ...dates,\n          start_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        onChange: e => setDates({\n          ...dates,\n          end_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: fetchAverageRating,\n      children: \"Get Average Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), average !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: [\"Average Rating: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AverageRating, \"JaoWFH2vlgmrqNF7qYzCKkbMbzQ=\", false, function () {\n  return [useParams];\n});\n_c = AverageRating;\nexport default AverageRating;\nvar _c;\n$RefreshReg$(_c, \"AverageRating\");","map":{"version":3,"names":["useEffect","useState","useParams","api","jsxDEV","_jsxDEV","AverageRating","_s","id","average","setAverage","dates","setDates","start_date","end_date","fetchAverageRating","res","get","params","data","average_rating","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/workspace/dh-life-front-v2/src/pages/AverageRating.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { api } from \"../utils/api\";\n\nconst AverageRating = () => {\n  const { id } = useParams();\n  const [average, setAverage] = useState(null);\n  const [dates, setDates] = useState({ start_date: \"\", end_date: \"\" });\n\n  const fetchAverageRating = async () => {\n    if (!dates.start_date || !dates.end_date) return;\n    try {\n      const res = await api.get(`api/focus-areas/${id}/average-rating/`, {\n        params: dates,\n      });\n      setAverage(res.data.average_rating);\n    } catch (error) {\n      console.error(\"Error fetching average rating\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"my-4\">Average Rating for Focus Area</h2>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Start Date:</label>\n        <input type=\"date\" className=\"form-control\" onChange={(e) => setDates({ ...dates, start_date: e.target.value })} />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">End Date:</label>\n        <input type=\"date\" className=\"form-control\" onChange={(e) => setDates({ ...dates, end_date: e.target.value })} />\n      </div>\n      <button className=\"btn btn-primary\" onClick={fetchAverageRating}>Get Average Rating</button>\n\n      {average !== null && (\n        <p className=\"mt-4\">Average Rating: <strong>{average}</strong></p>\n      )}\n    </div>\n  );\n};\n\nexport default AverageRating;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}